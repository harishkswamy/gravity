<?xml version="1.0"?>
<!--
    Copyright 2004 The Apache Software Foundation
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!-- $Id: common-build.xml,v 1.1 2004-05-10 17:28:59 harishkswamy Exp $ -->
<project name="common-build" basedir="." default="jar">

    <!-- ========== Executable Targets ======================================== -->

    <target name="init-project" description="Project-level initialization phase" />

    <target name="init" description="Initialize environment" depends="init-project">

        <!-- read properties from the build.properties, if any -->

        <property file="build.properties" />

        <property name="src.dir" value="src" />

        <property name="main.src.dir" value="${src.dir}/main" />
        <property name="test.src.dir" value="${src.dir}/test" />

        <property name="lib.dir" value="lib" />

        <property name="build.dir" value="build" />

        <property name="main.build.dir" value="${build.dir}/main" />
        <property name="test.build.dir" value="${build.dir}/test" />

        <property name="main.classes.dir" value="${main.build.dir}/classes" />
        <property name="test.classes.dir" value="${test.build.dir}/classes" />

        <property name="test.results.dir" value="${test.build.dir}/results" />

        <!--property name="build.compiler" value="javac1.3" /-->
        <property name="compile.debug" value="true" />
        <property name="compile.deprecation" value="true" />
        <property name="compile.optimize" value="true" />

        <property name="docs.dir" value="docs" />

        <property name="web.dir" value="web" />

        <property name="dist.dir" value="dist" />

        <path id="lib.classpath">
            <fileset dir="${lib.dir}">
                <include name="*.jar" />
            </fileset>
        </path>

        <path id="main.srcpath">
            <pathelement path="${main.src.dir}" />
        </path>

        <path id="main.classpath">
            <path refid="lib.classpath" />
            <pathelement path="${main.classes.dir}" />
        </path>

        <path id="test.srcpath">
            <pathelement path="${test.src.dir}" />
        </path>

        <path id="test.classpath">
            <path refid="main.classpath" />
            <pathelement path="${test.classes.dir}" />
        </path>
    </target>

    <target name="clean-project" description="Project-level clean phase" />

    <target name="clean" description="Wipeout all generated files" depends="init, clean-project">
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
        <delete dir="${web.dir}" />
    </target>

    <target name="prepare-project" description="Project-level prepare phase" />

    <target name="prepare" description="Prepare build directory" depends="init, prepare-project">
        <mkdir dir="${main.classes.dir}" />
        <mkdir dir="${test.classes.dir}" />
        <mkdir dir="${test.results.dir}" />
    </target>

    <target name="compile-main" description="Compile source" depends="prepare">
        <javac debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               destdir="${main.classes.dir}"
               target="1.3"
               source="1.3"
               optimize="${compile.optimize}"
               srcdir="${main.src.dir}"
        >
            <classpath refid="main.classpath" />
        </javac>
    </target>

    <target name="compile-test" depends="compile-main">
        <javac debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               destdir="${test.classes.dir}"
               target="1.3"
               source="1.3"
               optimize="${compile.optimize}"
               srcdir="${test.src.dir}"
        >
            <classpath refid="main.classpath" />
        </javac>
    </target>

    <target name="junit" description="Run the test suite." depends="compile-test">
        <junit printsummary="no" errorProperty="test.failed" failureProperty="test.failed" fork="true">
            <classpath refid="test.classpath" />
            <classpath refid="test.srcpath" />

            <formatter type="xml" />
            <formatter type="brief" usefile="false" />

            <batchtest todir="${test.results.dir}" unless="testcase">
                <fileset dir="${test.classes.dir}" includes="**/*Test.class" excludes="**/*$$*.class" />
            </batchtest>

            <batchtest todir="${test.results.dir}" if="testcase">
                <fileset dir="${test.classes.dir}" includes="**/${testcase}.class" />
            </batchtest>
        </junit>

        <fail if="test.failed">Unit tests failed.</fail>
    </target>

    <!-- ========== Begin: Documentation targets ========== -->

    <!-- Javadoc target -->
    <target name="javadoc" description="Create component Javadoc documentation" depends="compile-main">
        <mkdir dir="${web.dir}/docs/api" />

        <javadoc author="true"
                 destdir="${web.dir}/docs/api"
                 source="1.3"
                 doctitle="${component.title}"
                 packagenames="gravity.*"
                 access="public"
                 sourcepathref="main.srcpath"
                 classpathref="main.classpath"
                 version="true"
                 windowtitle="${component.title} (Version ${component.version})"
                 Overview="${main.src.dir}/overview.html"
        />
    </target>

    <!-- Clover code coverage targets -->
    <target name="clover-report">
        <property name="reports.clover.dir" value="${web.dir}/docs/clover" />

        <mkdir dir="${reports.clover.dir}" />

        <java classname="com.cortexeb.tools.clover.reporters.html.HtmlReporter" fork="true">
            <classpath>
                <pathelement location="${clover.dir}/lib/clover.jar" />
                <pathelement location="${clover.dir}/lib/velocity.jar" />
            </classpath>
            <arg line="--outputdir ${reports.clover.dir}" />
            <arg line="--showSrc" />
            <arg line="--initstring ${clover.initstring}" />
            <arg line="--title 'Release ${component.version}'" />
        </java>

    </target>

    <target name="clover" description="Run tests and construct the Clover report." depends="compile-test">
        <property name="clover.classes.dir" value="${test.build.dir}/clover/classes" />
        <property name="clover.db.dir" value="${test.build.dir}/clover/db" />
        <property name="clover.initstring" location="${clover.db.dir}/clover-db" />

        <mkdir dir="${clover.db.dir}" />
        <mkdir dir="${clover.classes.dir}" />

        <property name="build.compiler" value="org.apache.tools.ant.taskdefs.CloverCompilerAdapter" />

        <javac srcdir="${main.src.dir}" destdir="${clover.classes.dir}" debug="on" target="1.1">
            <classpath refid="main.classpath" />
        </javac>

        <path id="classpath.clover">
            <pathelement path="${clover.classes.dir}" />
            <path refid="test.classpath" />
            <path refid="test.srcpath" />

            <pathelement location="${clover.dir}/lib/clover.jar" />
            <pathelement location="${junit.jar}" />
        </path>

        <echo>Executing suite gravity.GravityTestSuite ...</echo>

        <echo>Clover Run #1:  No logging enabled ...</echo>

        <java fork="true" classname="junit.textui.TestRunner" failonerror="true">
            <classpath refid="classpath.clover" />

            <arg value="gravity.GravityTestSuite" />
        </java>

        <echo>Clover Run #2: All logging enabled ...</echo>

        <java fork="true" classname="junit.textui.TestRunner" failonerror="true">
            <classpath refid="classpath.clover" />

            <arg value="gravity.GravityTestSuite" />
            <sysproperty key="log4j.configuration" value="log4j-slow.properties" />
        </java>

        <antcall target="clover-report" />
    </target>

    <!-- ========== End: Documentation targets ========== -->

    <target name="jar" description="Create binary distribution" depends="compile-main">
        <mkdir dir="${dist.dir}" />

        <copy file="LICENSE" todir="${main.classes.dir}" />

        <jar basedir="${main.classes.dir}" jarfile="${dist.dir}/${component.name}-${component.version}.jar">
            <include name="**/*" />
        </jar>
    </target>

    <target name="all" depends="clean, junit, clover, javadoc, jar" />

</project>